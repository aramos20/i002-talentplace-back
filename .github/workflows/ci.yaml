name: CI Workflow

on:
  push:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Dependencies
        run: npm ci --verbose --frozen-lockfile

      - name: Check for outdated dependencies
        run: |
          npm outdated

      - name: Update dependencies
        run: |
          npm update --save

      - name: Verify Dependencies
        run: npm audit

      - name: Build Application
        run: npm run build

      #- name: Test application
        #run: npm test

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:latest
                #${{ secrets.DOCKERHUB_USERNAME }}/talentplace:${{ github.run_number }}
                #${{ secrets.DOCKERHUB_USERNAME }}/talentplace:${{ github.sha }}
  
  #verify-connectivity:
    #needs: build-and-test
    #runs-on: ubuntu-latest
    #steps:
      #- name: Check Backend Connectivity
        #run: curl -sSf http://backend-url/healthcheck || exit 1

      #- name: Check Frontend Connectivity
        #run: curl -sSf http://frontend-url/ || exit 1
